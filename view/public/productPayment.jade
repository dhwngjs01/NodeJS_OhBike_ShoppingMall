doctype html
html(lang="ko")
	head
		include ../head.jade
	body
		#wrap
			include ../header.jade
			#contents
				.wrap
					#productPayment
						.title
							i.far.fa-credit-card
							h2 결제

						table#productPaymentList
							colgroup
								col(style="width:15%")
								col(style="width:25%")
								col(style="width:7%")
								col(style="width:10%")
								col(style="width:10%")
								col(style="width:10%")
								col(style="width:13%")
							thead
								tr
									th(colspan="2") 상품
									th 사이즈
									th 수량
									th 가격
									th 배송비
									th 최종가격
							tbody
								- if(product_list.size > 0){
									- each product, i in product_list
										tr
											td
												img(src="../uploadFiles/#{product.file_save_name}", alt="#{product.file_show_name}" style="width:100%;")
											td #{product.product_name}
											td #{product.option_name}
											td
												//- input#optionNum(type="text" value="#{payment.selected_option_num}" min="1" max="#{payment.option_max}")
												| #{product.selected_option_num} 개
											td #{product.product_price.numberWithCommas()} 원
											td
												- if(product.product_price * product.selected_option_num > 50000){
													| 0 원
												- } else {
													| {(2500 * product.selected_option_num).numberWithCommas()} 원
												- }
											td
												- if(product.product_price * product.selected_option_num > 50000){
													| #{(product.product_price * product.selected_option_num).numberWithCommas()} 원
												- } else {
													| #{(product.product_price * product.selected_option_num + (2500 * product.selected_option_num)).numberWithCommas()} 원
												- }
								- } else {
									script.
										history.back();
								- }
						
						form#productPaymentForm(action="/public/payment/final" method="post")
							input(type="hidden" name="payment_size" value="#{product_list.size}")
							input(type="hidden" name="total_product_price" value="#{product_list.total_product_price}")
							- each product, i in product_list
								input(type="hidden" name="product_no[]" value="#{product.product_no}")
								input(type="hidden" name="option_no[]" value="#{product.option_no}")
								input(type="hidden" name="option_num[]" value="#{product.selected_option_num}")
								input(type="hidden" name="product_price[]" value="#{product.product_price}")
							- each basket_no, i in basket_no_list
								input(type="hidden" name="basket_no_list[]" value="#{basket_no}")


							#productPaymentDelivery
								#orderInfo
									h3 주문자 정보
									table.orderInfo
										colgroup
											col(style="width:25%")
											col(style="width:75%")
										tbody
											tr
												td 주문하시는 분
												td #{user.user_name}
											tr
												td 주소
												td.orderAddress
													p #{user.user_address}
													p #{user.user_detail_address}
											tr
												td 휴대전화
												td #{user.user_phone}
									
								#deliveryInfo
									h3 배송지 정보
									table.deliveryInfo
										colgroup
											col(style="width:25%")
											col(style="width:75%")
										tbody
											tr
												td 받으시는 분
												td
													input#order_ship_name(type="text" name="order_ship_name" required)
											tr
												td 휴대전화
												td
													input#order_ship_phone(type="text" name="order_ship_phone" placeholder="010-1234-1234" required)
											tr
												td 주소
												td
													#address
														.zipCode
															input#order_ship_zipcode(type="text" name="order_ship_zipcode" placeholder="우편번호" readonly required)
														.btnFindAddress
															button#btnFindAddress(type="button") 주소찾기
														ul.address
															li
																input#order_ship_address(type="text" name="order_ship_address" placeholder="주소" readonly required)
															li
																input#order_ship_detail_address(type="text" name="order_ship_detail_address" placeholder="상세 주소" readonly)
											tr
												td 남기는 말씀
												td
													textarea#order_msg(name="order_msg") 빠른 배송 부탁드립니다.

							#productPaymentPriceResult
								ul
									li
										h3 주문 금액
										p #{(product_list.total_product_price).numberWithCommas()} 원
									li
										i.fas.fa-plus
									li
										h3 배송비
										p
											- if(product_list.total_product_price > 50000){
												| 0 원
											- } else {
												| #{(2500 * product_list.size).numberWithCommas()} 원
											- }
									li
										i.fas.fa-equals
									li
										h3 최종 결제금액
										p.text-red
											- if(product_list.total_product_price > 50000){
												| #{(product_list.total_product_price).numberWithCommas()} 원
											- } else {
												| #{(product_list.total_product_price + (2500 * product_list.size)).numberWithCommas()} 원
											- }
							
							#productPaymentBtnList
								button(type="submit") 결제하기
								button(type="button" onclick="history.back()") 취소


			include ../footer.jade
		include ../script.jade
		script(src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js")
		script.
			//- // 숫자만 입력 가능
			//- $("#optionNum").spinner();

			//- // 키보드로 숫자만 입력 가능
			//- $("#optionNum").keyup(function(e){
			//- 	onlyNumber($(this), e);
			//- }).keydown(function(e){
			//- 	onlyNumber($(this), e);
			//- });

			// 주소 찾기 버튼 클릭 시
			$("#btnFindAddress").click(function(){
				daumPostCode();
			});

			// 주소 찾기 API 호출 함수
			daumPostCode = () => {
				new daum.Postcode({
					oncomplete: function(data) {
						$("#order_ship_zipcode").val(data.zonecode);
						$("#order_ship_address").val(data.roadAddress);
						$("#order_ship_detail_address").val(data.buildingName);

						$("#order_ship_detail_address").prop("readonly", false);
					}
				}).open();
			}

			// 결제하기 버튼 클릭 시
			$("#productPaymentForm").submit(function(e){
				e.preventDefault();
				// 주문자 정보 유효성 검사 (휴대전화)
				phoneFormat = /^[0-9]{3}-[0-9]{4}-[0-9]{4}$/;
				if(!phoneFormat.test($("#order_ship_phone").val())){
					alert("휴대전화 입력 란의 형식에 맞게 입력해주세요.\nex) 010-1234-1234")
					return false;
				}

				if($("#order_ship_zipcode").val() == "" || $("#order_ship_address").val() == ""){
					alert("주소를 입력해주세요.");
					return false;
				}

				$.ajax({
					type : "POST",
					url : "/public/payment/final",
					data : $(this).serializeArray(),
					success : (res) => {
						console.log(res);

						if(res.ordersInsertFailed || res.detailInsertFailed){
							alert("결제 실패했습니다.");
							return false;
						}

						if(res.optionsUpdateFailed){
							alert("상품 수량 감소를 실패했습니다.");
							return false;
						}
						
						if(res.basketDeleteFailed){
							alert("장바구니에 담긴 상품이 삭제되지 않았습니다.");
							return false;
						}
						
						if(res.orderSuccess){
							alert("결제 완료되었습니다.");
							link("/user/orderInfo");
						}
					},
					error : (e) => {
						console.log(e);
					}
				});

				return false;
			});